=========
缓存项
=========


::

    禁止擅自初始化「Item」对象
    该类实例只能使用「CacheItemPoolInterface」对象的 getItem() 方法来获取


+-------------+-----------------------------------------------------------+
|属性         |值                                                         |
+=============+===========================================================+
|命名空间     |fize\\cache                                                |
+-------------+-----------------------------------------------------------+
|类名         |Item                                                       |
+-------------+-----------------------------------------------------------+
|实现接口     |fize\\cache\\ItemInterface, Psr\\Cache\\CacheItemInterface |
+-------------+-----------------------------------------------------------+


:方法:


+------------------+----------------------------------------+
|方法名            |说明                                    |
+==================+========================================+
|`__construct()`_  |构造                                    |
+------------------+----------------------------------------+
|`getKey()`_       |获取键名                                |
+------------------+----------------------------------------+
|`isHit()`_        |是否命中                                |
+------------------+----------------------------------------+
|`get()`_          |获取值                                  |
+------------------+----------------------------------------+
|`set()`_          |设置值                                  |
+------------------+----------------------------------------+
|`expiresAt()`_    |设置缓存项的准确过期时间点              |
+------------------+----------------------------------------+
|`expiresAfter()`_ |设置缓存项的过期时间                    |
+------------------+----------------------------------------+
|`setHit()`_       |设置是否命中                            |
+------------------+----------------------------------------+
|`getExpires()`_   |获取缓存项的过期时间戳                  |
+------------------+----------------------------------------+
|`checkHit()`_     |根据设置判断缓存是否有效                |
+------------------+----------------------------------------+


方法
======
__construct()
-------------
构造

.. code-block:: php

  public function __construct (
      string $key
  )


:参数:
  +-------+-------+
  |名称   |说明   |
  +=======+=======+
  |key    |键名   |
  +-------+-------+
  
  


getKey()
--------
获取键名

.. code-block:: php

  public function getKey () : string



isHit()
-------
是否命中

.. code-block:: php

  public function isHit () : bool



get()
-----
获取值

.. code-block:: php

  public function get () : mixed



set()
-----
设置值

.. code-block:: php

  public function set (
      mixed $value
  ) : $this


:参数:
  +-------+-------+
  |名称   |说明   |
  +=======+=======+
  |value  |值     |
  +-------+-------+
  
  


expiresAt()
-----------
设置缓存项的准确过期时间点

.. code-block:: php

  public function expiresAt (
      \DateTimeInterface|null $expiration
  ) : $this


:参数:
  +-----------+----------------+
  |名称       |说明            |
  +===========+================+
  |expiration |过期时间点      |
  +-----------+----------------+
  
  


::

    参数 `$expiration`:
    为 null 表示使用默认设置


expiresAfter()
--------------
设置缓存项的过期时间

.. code-block:: php

  public function expiresAfter (
      \DateInterval|int|null $time
  ) : $this


:参数:
  +-------+-------------------------------+
  |名称   |说明                           |
  +=======+===============================+
  |time   |以秒为单位的过期时长           |
  +-------+-------------------------------+
  
  


setHit()
--------
设置是否命中

.. code-block:: php

  public function setHit (
      bool $is_hit
  ) : $this


:参数:
  +-------+-------------+
  |名称   |说明         |
  +=======+=============+
  |is_hit |是否命中     |
  +-------+-------------+
  
  


::

    外部不应直接调用该方法


getExpires()
------------
获取缓存项的过期时间戳

.. code-block:: php

  public function getExpires () : int|null


:返回值:
  返回 null 表示永不过期


checkHit()
----------
根据设置判断缓存是否有效

.. code-block:: php

  public function checkHit () : bool



