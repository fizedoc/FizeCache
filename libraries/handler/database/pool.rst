=========
缓存池
=========


+-------------+---------------------------------------------------------------+
|属性         |值                                                             |
+=============+===============================================================+
|命名空间     |fize\\cache\\handler\\database                                 |
+-------------+---------------------------------------------------------------+
|类名         |Pool                                                           |
+-------------+---------------------------------------------------------------+
|父类         |fize\\cache\\AbstractPool                                      |
+-------------+---------------------------------------------------------------+
|实现接口     |Psr\\Cache\\CacheItemPoolInterface, fize\\cache\\PoolInterface |
+-------------+---------------------------------------------------------------+


:方法:


+------------------+-----------------------------------------------------------------------------+
|方法名            |说明                                                                         |
+==================+=============================================================================+
|`__construct()`_  |构造函数                                                                     |
+------------------+-----------------------------------------------------------------------------+
|`getItem()`_      |获取缓存项                                                                   |
+------------------+-----------------------------------------------------------------------------+
|`clear()`_        |清空缓存池                                                                   |
+------------------+-----------------------------------------------------------------------------+
|`deleteItem()`_   |从缓存池里移除缓存项                                                         |
+------------------+-----------------------------------------------------------------------------+
|`save()`_         |立刻为对象做数据持久化                                                       |
+------------------+-----------------------------------------------------------------------------+
|`initMysql()`_    |初始化，如果尚未建立 cache 表，可以运行该方法来建立表                        |
+------------------+-----------------------------------------------------------------------------+
|`hasItem()`_      |检查是否有对应的缓存项                                                       |
+------------------+-----------------------------------------------------------------------------+
|`getItems()`_     |返回一个可供遍历的缓存项集合                                                 |
+------------------+-----------------------------------------------------------------------------+
|`deleteItems()`_  |移除多个缓存项                                                               |
+------------------+-----------------------------------------------------------------------------+
|`saveItems()`_    |设置多个缓存项                                                               |
+------------------+-----------------------------------------------------------------------------+
|`saveDeferred()`_ |稍后为缓存项做数据持久化                                                     |
+------------------+-----------------------------------------------------------------------------+
|`commit()`_       |提交所有的正在队列里等待的请求到数据持久层                                   |
+------------------+-----------------------------------------------------------------------------+


方法
======
__construct()
-------------
构造函数

.. code-block:: php

  public function __construct (
      array $config = []
  )


:参数:
  +-------+-------+
  |名称   |说明   |
  +=======+=======+
  |config |配置   |
  +-------+-------+
  
  


getItem()
---------
获取缓存项

.. code-block:: php

  public function getItem (
      string $key
  ) : \Psr\Cache\CacheItemInterface


:参数:
  +-------+-------+
  |名称   |说明   |
  +=======+=======+
  |key    |键名   |
  +-------+-------+
  
  


clear()
-------
清空缓存池

.. code-block:: php

  public function clear () : bool



deleteItem()
------------
从缓存池里移除缓存项

.. code-block:: php

  public function deleteItem (
      string $key
  ) : bool


:参数:
  +-------+-------+
  |名称   |说明   |
  +=======+=======+
  |key    |键名   |
  +-------+-------+
  
  


save()
------
立刻为对象做数据持久化

.. code-block:: php

  public function save (
      \Psr\Cache\CacheItemInterface $item
  ) : bool


:参数:
  +-------+-------------+
  |名称   |说明         |
  +=======+=============+
  |item   |缓存对象     |
  +-------+-------------+
  
  


initMysql()
-----------
初始化，如果尚未建立 cache 表，可以运行该方法来建立表

.. code-block:: php

  public static function initMysql (
      array $config
  )


:参数:
  +-------+-------+
  |名称   |说明   |
  +=======+=======+
  |config |       |
  +-------+-------+
  
  


::

    适用于mysql


hasItem()
---------
检查是否有对应的缓存项

.. code-block:: php

  public function hasItem (
      string $key
  ) : bool


:参数:
  +-------+-------+
  |名称   |说明   |
  +=======+=======+
  |key    |键名   |
  +-------+-------+
  
  


getItems()
----------
返回一个可供遍历的缓存项集合

.. code-block:: php

  public function getItems (
      array $keys = []
  ) : \CacheItemInterface[]


:参数:
  +-------+----------------------+
  |名称   |说明                  |
  +=======+======================+
  |keys   |键名组成的数组        |
  +-------+----------------------+
  
  


deleteItems()
-------------
移除多个缓存项

.. code-block:: php

  public function deleteItems (
      array $keys
  ) : bool


:参数:
  +-------+----------------------+
  |名称   |说明                  |
  +=======+======================+
  |keys   |键名组成的数组        |
  +-------+----------------------+
  
  


saveItems()
-----------
设置多个缓存项

.. code-block:: php

  public function saveItems (
      \CacheItemInterface[] $items
  ) : bool


:参数:
  +-------+-------+
  |名称   |说明   |
  +=======+=======+
  |items  |       |
  +-------+-------+
  
  


saveDeferred()
--------------
稍后为缓存项做数据持久化

.. code-block:: php

  public function saveDeferred (
      \Psr\Cache\CacheItemInterface $item
  ) : bool


:参数:
  +-------+-------+
  |名称   |说明   |
  +=======+=======+
  |item   |       |
  +-------+-------+
  
  


commit()
--------
提交所有的正在队列里等待的请求到数据持久层

.. code-block:: php

  public function commit () : bool



